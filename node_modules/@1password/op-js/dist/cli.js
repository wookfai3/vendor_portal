var P=Object.create;var c=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var L=Object.getPrototypeOf,B=Object.prototype.hasOwnProperty;var G=(t,e)=>{for(var r in e)c(t,r,{get:e[r],enumerable:!0})},x=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of D(e))!B.call(t,i)&&i!==r&&c(t,i,{get:()=>e[i],enumerable:!(n=k(e,i))||n.enumerable});return t};var E=(t,e,r)=>(r=t!=null?P(L(t)):{},x(e||!t||!t.__esModule?c(r,"default",{value:t,enumerable:!0}):r,t)),J=t=>x(c({},"__esModule",{value:!0}),t);var z={};G(z,{CLI:()=>f,CLIError:()=>g,ExecutionError:()=>p,ValidationError:()=>m,camelToHyphen:()=>C,cli:()=>V,createFieldAssignment:()=>N,createFlags:()=>v,defaultClientInfo:()=>S,parseFlagValue:()=>O,sanitizeInput:()=>a,semverToInt:()=>F});module.exports=J(z);var T=require("child_process"),w=require("lookpath"),u=E(require("semver/functions/coerce")),d=E(require("semver/functions/satisfies")),A=require("../package.json");class m extends Error{constructor(r,n,i){let o;switch(r){case"not-found":{o="Could not find `op` executable";break}case"version":{o=`CLI version ${i} does not satisfy required version ${n}`;break}}super(o);this.type=r;this.requiredVersion=n;this.currentVersion=i;this.name="ValidationError"}}class p extends Error{constructor(r,n){super(r);this.status=n;this.name="ExecutionError"}}class g extends p{constructor(r,n){const i=r.match(g.errorRegex);let o,s;i?(o=i[2],s=new Date(i[1])):o="Unknown error";super(o,n);this.originalMessage=r;this.name="CLIError",this.timestamp=s}static errorRegex=/\[ERROR] (\d{4}\/\d{2}\/\d{2} \d{2}:\d{2}:\d{2}) (.+)/;timestamp}const F=t=>t.split(".").map(e=>e.padStart(2,"0")).join(""),C=t=>t.replaceAll(/([A-Za-z])(?=[A-Z])/g,"$1-").toLowerCase(),I=['"',"$","'","\\","`"],M=new Set([...I,"."]),a=t=>{let e="",r=!1;for(let n=0;n<t.length;n++)t[n]==="\\"?(r=M.has(t[n+1]),r||(e+="\\")):!r&&I.includes(t[n])&&(e+="\\",r=!1),e+=t[n];return e},U=(t,e)=>t.length===e.length&&t.every((r,n)=>r===e[n]),O=t=>{if(typeof t=="string")return`=${a(t)}`;if(Array.isArray(t))return`=${t.join(",")}`;if(typeof t=="object"){let e="";if("label"in t&&(e+=(t.label||[]).map(r=>`label=${r}`).join(",")),"type"in t&&(e+=(t.type||[]).map(r=>`type=${r}`).join(",")),e.length>0)return`=${a(e)}`}return""},v=t=>Object.entries(t).filter(([e,r])=>!!r).map(([e,r])=>`--${C(a(e))}${O(r)}`),N=([t,e,r])=>`${a(t)}[${a(e)}]=${a(r)}`,S={name:"1Password for JavaScript",id:"JS",build:F(A.version)};class f{static recommendedVersion=">=2.4.0";clientInfo=S;globalFlags={};connect;serviceAccountToken;setClientInfo(e){this.clientInfo=e}getVersion(){return this.execute([],{flags:{version:!0},json:!1})}async validate(e=f.recommendedVersion){if(!!!await(0,w.lookpath)("op"))throw new m("not-found");const n=this.getVersion(),i=(0,u.default)(n);if(!(0,d.default)(i,e))throw new m("version",e,n)}createParts(e,r,n,i){const o=e.map(s=>a(s));for(const s of r)if(typeof s=="string")o.push(a(s));else if(Array.isArray(s))o.push(N(s));else throw new TypeError("Invalid argument");if(i&&(n={...n,format:"json"}),U(e,["inject"])){const s=(0,u.default)(V.getVersion());if((0,d.default)(s,">=2.6.2")){if(process.platform==="win32")throw new p("Inject is not supported on Windows for version >=2.6.2 of the CLI",1);n={...n,inFile:"/dev/stdin"}}}return[...o,...v({...this.globalFlags,...n})]}execute(e,{args:r=[],flags:n={},stdin:i,json:o=!0}={}){let s;const $=this.createParts(e,r,n,o);i&&(s=Buffer.from(typeof i=="string"?i:JSON.stringify(i)));const{status:h,error:b,stdout:R,stderr:_}=(0,T.spawnSync)("op",$,{stdio:s?"pipe":["ignore","pipe","pipe"],input:s,env:{...process.env,...this.connect&&{OP_CONNECT_HOST:this.connect.host,OP_CONNECT_TOKEN:this.connect.token},...this.serviceAccountToken&&{OP_SERVICE_ACCOUNT_TOKEN:this.serviceAccountToken},OP_INTEGRATION_NAME:this.clientInfo.name,OP_INTEGRATION_ID:this.clientInfo.id,OP_INTEGRATION_BUILDNUMBER:this.clientInfo.build}});if(b)throw new p(b.message,h);const y=_.toString();if(y.length>0)throw new g(y,h);const l=R.toString().trim();if(l.length!==0){if(!o)return l;try{return JSON.parse(l)}catch(j){throw console.log(l),j}}}}const V=new f;0&&(module.exports={CLI,CLIError,ExecutionError,ValidationError,camelToHyphen,cli,createFieldAssignment,createFlags,defaultClientInfo,parseFlagValue,sanitizeInput,semverToInt});
