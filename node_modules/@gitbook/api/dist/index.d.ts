import { Api } from './client';
import { GitBookAPIError } from './GitBookAPIError';
export * from './client';
export { GitBookAPIError };
export declare const GITBOOK_DEFAULT_ENDPOINT = "https://api.gitbook.com";
export interface GitBookAPIServiceBinding {
    fetch: typeof fetch;
}
export declare class GitBookAPI extends Api<{
    authToken?: string;
}> {
    /**
     * Endpoint used by the API client.
     */
    readonly endpoint: string;
    /**
     * Authentication token used by the API client.
     */
    readonly authToken: string | undefined;
    /**
     * User agent used by the API client.
     */
    readonly userAgent: string;
    /**
     * Service binding used to request the API.
     */
    readonly serviceBinding: GitBookAPIServiceBinding | undefined;
    constructor(options?: {
        /**
         * API endpoint to use.
         * @default "https://api.gitbook.com"
         */
        endpoint?: string;
        /**
         * User agent to use.
         * It defaults to the package name and version.
         */
        userAgent?: string;
        /**
         * Authentication token to use.
         */
        authToken?: string;
        /**
         * Service binding used to request the API.
         * It defaults to the HTTP fetch.
         */
        serviceBinding?: GitBookAPIServiceBinding;
    });
    /**
     * Create a new API client, authenticated as an installation.
     */
    createInstallationClient(integrationName: string, installationId: string): Promise<GitBookAPI>;
}
